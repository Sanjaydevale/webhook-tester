# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.2"

      - name: Test cli
        run: go test ./cli
      - name: Test server
        run: go test ./server
      - name: Test serialize
        run: go test ./serialize

  build_binary_files:
    needs: run_tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.2"

      - name: build the binary files
        run: |
          env GOOS=windows GOARCH=amd64 go build -o "./binary-files/windows-amd64.exe" ./cmd/client/main.go
          env GOOS=linux GOARCH=amd64 go build -o "./binary-files/linux-amd64" ./cmd/client/main.go
          env GOOS=linux GOARCH=arm go build -o "./binary-files/linux-arm" ./cmd/client/main.go
      - name: Update repository with new binary files
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git config --global github.token ${{secrets.TOKEN}}
          git add .
          git commit -m "Update client binary files"
          git push origin main

  push_to_registry:
    needs: run_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: sanjayj369/webhooktester:latest

  deploy_docker:
    needs:
      - run_tests
      - push_to_registry
    name: "deploying docker"
    runs-on: ubuntu-latest

    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/coding/webhook-tester/
            ./deploy_docker.sh
